module.exports = function(replacements) {

  var template = '<div class="VueTables VueTables--[[source]]"> <div class="row"> <div class="col-md-6"> <div v-if="!options.filterByColumn" class="form-group form-inline pull-left VueTables__search"> <label>{{display(\'filter\')}}</label> <input class="form-control" type="text" placeholder="{{display(\'filterPlaceholder\')}}" @keyup="search()" v-model="query"/> </div></div><div class="col-md-6"> <div v-if="options.pagination && options.pagination.dropdown && totalPages>0" class="form-group form-inline pull-right VueTables__dropdown-pagination"> <label>{{display(\'page\')}}</label> <select class="form-control" v-model="page" @change="setPage(page)"> <option v-for="page in totalPages">{{page+1}}</option> </select> </div><div class="form-group form-inline pull-right VueTables__limit"> <label>{{display(\'limit\')}}</label> <select class="form-control" v-model="limit" @change="setPage(1)" > <option v-for="value in options.perPageValues">{{value}}</option> </select> </div></div></div><table class="VueTables__table table" v-bind:class="options.skin"> <thead> <tr> <th @click="orderByColumn(column)" v-for="column in columns" v-bind:class="sortableClass(column)"><span class="VueTables__heading">{{getHeading(column)}}</span> <span v-if="sortable(column)" class="VueTables__sort-icon glyphicon pull-right" v-bind:class="sortableChevronClass(column)"></span></th> </tr><tr v-if="options.filterByColumn" class="VueTables__filters-row"> <th v-for="column in columns"> <input @keyup="search()" v-if="customColumns.indexOf(column)==-1" class="form-control" type="text" placeholder="{{display(\'filterBy\',getHeading(column))}}" v-model="query[column]"> </th> </tr></thead><tfoot v-if="options.footerHeadings"> <tr> <th @click="orderByColumn(column)" v-for="column in columns" v-bind:class="sortableClass(column)"><span class="VueTables__heading">{{getHeading(column)}}</span> <span v-if="sortable(column)" class="VueTables__sort-icon glyphicon pull-right" v-bind:class="sortableChevronClass(column)"></span></th> </tr></tfoot><tbody v-el:tbody> <tr v-for="row in data [[rowFilters]]" [[trackBy]]> <td v-for="column in columns" v-html="row[column] | render row column [[columnFilters]]"></td></tr><tr v-if="count==0"class="VueTables__no-results"><td class="text-center"colspan="{{columns.length}}">{{display(\'noResults\')}}</td></tr></tbody></table><ul v-show="totalPages>1" v-if="options.pagination && !options.pagination.dropdown" class="pagination VueTables__pagination"> <li class="VueTables__pagination-item VueTables__pagination-item-prev-chunk" v-bind:class="chunkNavDisabled(-1)?\'disabled\':\'\'"> <a href="javascript:void(0);" @click="!chunkNavDisabled(-1) && chunk(-1)"><<</a></li><li class="VueTables__pagination-item VueTables__pagination-item-prev-page"v-bind:class="pageNavDisabled(-1)?\'disabled\':\'\'"><a href="javascript:void(0);"@click="!pageNavDisabled(-1) && setPage(page-1)"><</a></li><li class="VueTables__pagination-item"v-for="page in options.pagination.chunk"v-if="paginationStart + $index <=totalPages"v-bind:class="active(paginationStart + $index - 1)"><a href="javascript:void(0);"@click="setPage(paginationStart + $index)">{{paginationStart + $index}}</a></li><li class="VueTables__pagination-item VueTables__pagination-item-next-page"v-bind:class="pageNavDisabled(1)?\'disabled\':\'\'"><a href="javascript:void(0);"@click="!pageNavDisabled(1) && setPage(page+1)">></a></li><li class="VueTables__pagination-item VueTables__pagination-item-next-chunk"v-bind:class="chunkNavDisabled(1)?\'disabled\':\'\'"><a href="javascript:void(0);"@click="!chunkNavDisabled(1) && chunk(1)">>></a></li></ul><p v-if="count!=0"class="VueTables__count">{{display(\'count\', count)}}</p></div>';

  for (var replacement in replacements) {
    template = template.replace("[[" + replacement + "]]", replacements[replacement]);
  }

return template;

}
